{"version":3,"sources":["blocks/Header/Header.js","blocks/Button/Button.js","blocks/AddUserForm/AddUserForm.js","blocks/Users/Users.js","blocks/AddNewsForm/AddNewsForm.js","blocks/News/News.js","blocks/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","Component","Button","props","onClick","text","AddUserForm","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","name","phone","checks","bonusCard","_this2","lib","s","label","onChange","e","updateData","target","type","defaultValue","Button_Button_Button","onSubmit","field","setState","defineProperty","Users","header","trigger","actions","AddUserForm_AddUserForm_AddUserForm","data","map","user","AddNewsForm","title","description","imageUrl","News","AddNewsForm_AddNewsForm_AddNewsForm","item","Footer","App","users","news","Header_Header_Header","Users_Users_Users","onUserSubmit","News_News_News","onNewsSubmit","Footer_Footer_Footer","fetch","then","json","catch","method","headers","Accept","Content-Type","body","JSON","stringify","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iZAGaA,SAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cAAtB,4GANlBhB,EAAA,CAA4BkB,cCCfC,SAAb,SAAAlB,GAAA,SAAAkB,IAAA,OAAAjB,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,GAAAjB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAiB,EAAAlB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiB,EAAA,EAAAR,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,UACEC,UAAW,yBAA2BZ,KAAKgB,MAAMJ,UACjDK,QAASjB,KAAKgB,MAAMC,SACjBjB,KAAKgB,MAAME,UANxBH,EAAA,CAA4BD,6BCGfK,SAAb,SAAAtB,GAAA,SAAAsB,IAAA,IAAAC,EAAAC,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,GAAA,QAAAG,EAAAlB,UAAAmB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAtB,UAAAsB,GAAA,OAAAL,EAAAvB,OAAAG,EAAA,EAAAH,CAAAE,MAAAoB,EAAAtB,OAAAI,EAAA,EAAAJ,CAAAqB,IAAAQ,KAAAxB,MAAAiB,EAAA,CAAApB,MAAA4B,OAAAJ,MACIK,MAAQ,CACJC,KAAM,GACNC,MAAO,GACPC,OAAQ,GACRC,UAAW,IALnBZ,EAAA,OAAAvB,OAAAO,EAAA,EAAAP,CAAAqB,EAAAtB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAqB,EAAA,EAAAZ,IAAA,SAAAC,MAAA,WAQa,IAAA0B,EAAAlC,KACL,OACIS,EAAAC,EAAAC,cAACwB,EAAA,IAAD,KACI1B,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIC,MAAM,qBAAMC,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,OAAQD,EAAEE,OAAOjC,UAC5EC,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIC,MAAM,6CAAUC,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,QAASD,EAAEE,OAAOjC,UACjFC,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIM,KAAK,SAASL,MAAM,8FAAmBM,aAAa,IAAIL,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,SAAUD,EAAEE,OAAOjC,SACtHC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,KACAC,EAAAC,EAAAC,cAAA,UAAQH,MAAM,KAAd,MAEJC,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIC,MAAM,kFAAiBC,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,YAAaD,EAAEE,OAAOjC,UAC5FC,EAAAC,EAAAC,cAACiC,EAAD,CAAQ1B,KAAK,mDAAWN,UAAU,qBAAqBK,QAAS,kBAAMiB,EAAKlB,MAAM6B,SAASX,EAAKL,aAtB/G,CAAAtB,IAAA,aAAAC,MAAA,SA2BesC,EAAOtC,GACdR,KAAK+C,SAALjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAiBgD,EAAQtC,QA5BjCW,EAAA,CAAiCL,cCCpBmC,SAAb,SAAApD,GAAA,SAAAoD,IAAA,OAAAnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,GAAAnD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAmD,EAAApD,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmD,EAAA,EAAA1C,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,sFACAF,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CACIe,OAAO,4HACPC,QAAS1C,EAAAC,EAAAC,cAACiC,EAAD,CAAQ1B,KAAK,8HAA2BkC,QAAS,IAC1D3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAaR,SAAU7C,KAAKgB,MAAM6B,cAGxC7C,KAAKgB,MAAMsC,KAAK/B,QAAWd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,sGACzBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTZ,KAAKgB,MAAMsC,KAAKC,IAAI,SAAAC,GAAI,OACrB/C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmB4C,EAAK1B,cAf1DmB,EAAA,CAA2BnC,cCDd2C,SAAb,SAAA5D,GAAA,SAAA4D,IAAA,IAAArC,EAAAC,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,GAAA,QAAAnC,EAAAlB,UAAAmB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAtB,UAAAsB,GAAA,OAAAL,EAAAvB,OAAAG,EAAA,EAAAH,CAAAE,MAAAoB,EAAAtB,OAAAI,EAAA,EAAAJ,CAAA2D,IAAA9B,KAAAxB,MAAAiB,EAAA,CAAApB,MAAA4B,OAAAJ,MACIK,MAAQ,CACJ6B,MAAO,GACPC,YAAa,GACbC,SAAU,IAJlBvC,EAAA,OAAAvB,OAAAO,EAAA,EAAAP,CAAA2D,EAAA5D,GAAAC,OAAAQ,EAAA,EAAAR,CAAA2D,EAAA,EAAAlD,IAAA,SAAAC,MAAA,WAOa,IAAA0B,EAAAlC,KACL,OACIS,EAAAC,EAAAC,cAACwB,EAAA,IAAD,KACI1B,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIC,MAAM,2BAAOC,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,QAASD,EAAEE,OAAOjC,UAC9EC,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIC,MAAM,mDAAWC,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,cAAeD,EAAEE,OAAOjC,UACxFC,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAOC,EAAG,GAAIC,MAAM,+FAAoBC,SAAU,SAACC,GAAD,OAAOL,EAAKM,WAAW,WAAYD,EAAEE,OAAOjC,UAC9FC,EAAAC,EAAAC,cAACiC,EAAD,CAAQ1B,KAAK,mDAAWN,UAAU,qBAAqBK,QAAS,kBAAMiB,EAAKlB,MAAM6B,SAASX,EAAKL,aAb/G,CAAAtB,IAAA,aAAAC,MAAA,SAkBesC,EAAOtC,GACdR,KAAK+C,SAALjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAiBgD,EAAQtC,QAnBjCiD,EAAA,CAAiC3C,cCCpB+C,SAAb,SAAAhE,GAAA,SAAAgE,IAAA,OAAA/D,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,GAAA/D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA+D,EAAAhE,GAAAC,OAAAQ,EAAA,EAAAR,CAAA+D,EAAA,EAAAtD,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CACIe,OAAO,8FACPC,QAAS1C,EAAAC,EAAAC,cAACiC,EAAD,CAAQ1B,KAAK,gGAAsBkC,QAAS,IACrD3C,EAAAC,EAAAC,cAACmD,EAAD,CAAajB,SAAU7C,KAAKgB,MAAM6B,cAI9CpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbZ,KAAKgB,MAAMsC,KAAK/B,QAAWd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,wEAAgDZ,KAAKgB,MAAMsC,KAAKC,IAAI,SAAAQ,GAAI,OACjGtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcmD,EAAKL,OACnCjD,EAAAC,EAAAC,cAAA,SAAIoD,EAAKJ,wBApBrCE,EAAA,CAA0B/C,cCJbkD,SAAb,SAAAnE,GAAA,SAAAmE,IAAA,OAAAlE,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,GAAAlE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAkE,EAAAnE,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkE,EAAA,EAAAzD,IAAA,SAAAC,MAAA,WAEI,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,kCALhBoD,EAAA,CAA4BlD,cC6DbmD,oNAvDbpC,MAAQ,CACNqC,MAAO,GACPC,KAAM,4EAIN,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC0D,EAAD,CAAOxB,SAAU7C,KAAKsE,aAAchB,KAAMtD,KAAK6B,MAAMqC,QACrDzD,EAAAC,EAAAC,cAAC4D,EAAD,CAAM1B,SAAU7C,KAAKwE,aAAclB,KAAMtD,KAAK6B,MAAMsC,QAEtD1D,EAAAC,EAAAC,cAAC8D,EAAD,mDAKc,IAAAvC,EAAAlC,KAClB0E,MAAM,cACHC,KAAK,SAAArB,GAAI,OAAIA,EAAKsB,SAClBD,KAAK,SAAArB,GACJpB,EAAKa,SAAS,CAAEmB,MAAOZ,MACtBuB,MAAM,SAAAtC,MAEXmC,MAAM,aACHC,KAAK,SAAArB,GAAI,OAAIA,EAAKsB,SAClBD,KAAK,SAAArB,GACJpB,EAAKa,SAAS,CAAEoB,KAAMb,MACrBuB,MAAM,SAAAtC,2CAGAe,GACXoB,MAAM,kCAAmC,CACvCI,OAAQ,OACRC,QAAS,CACPC,OAAU,oCACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU9B,0CAIZA,GACXoB,MAAM,iCAAiC,CACrCI,OAAQ,OACRC,QAAS,CACPC,OAAU,oCACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU9B,YAnDTxC,cCGEuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC","file":"static/js/main.34889328.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header>\n          <nav>\n              <div className=\"nav-wrapper container\">\n                  <a href=\"#\" className=\"brand-logo\">Панель управления</a>\n              </div>\n          </nav>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport './Button.css';\n\nexport class Button extends Component {\n  render() {\n    return (\n        <button\n          className={\"vegas-btn transparent \" + this.props.className}\n          onClick={this.props.onClick}>\n            {this.props.text}\n        </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Row, Input} from 'react-materialize';\nimport { Button } from '../Button/Button';\n\nimport './AddUserForm.css';\n\nexport class AddUserForm extends Component {\n    state = {\n        name: '',\n        phone: '',\n        checks: '',\n        bonusCard: ''\n    }\n\n    render() {\n        return (\n            <Row>\n                <Input s={12} label=\"Имя\" onChange={(e) => this.updateData('name', e.target.value)}/>\n                <Input s={12} label=\"Телефон\" onChange={(e) => this.updateData('phone', e.target.value)}/>\n                <Input s={12} type='select' label='Количество фишек' defaultValue='1' onChange={(e) => this.updateData('checks', e.target.value)}>\n                    <option value='1'>1</option>\n                    <option value='2'>2</option>\n                    <option value='3'>3</option>\n                    <option value='4'>4</option>\n                    <option value='5'>5</option>\n                    <option value='6'>6</option>\n                </Input>\n                <Input s={12} label=\"Бонусная карта\" onChange={(e) => this.updateData('bonusCard', e.target.value)}/>\n                <Button text=\"Добавить\" className=\"right margin-right\" onClick={() => this.props.onSubmit(this.state)}/>\n            </Row>\n        );\n    }\n\n    updateData(field, value) {\n        this.setState({ [field]: value });\n    }\n}\n","import React, { Component } from 'react';\n\nimport { Button } from '../Button/Button';\nimport { AddUserForm } from '../AddUserForm/AddUserForm';\nimport { Modal } from 'react-materialize';\n\nimport './Users.css';\n\nexport class Users extends Component {\n  render() {\n    return (\n        <div className=\"panel\">\n        <div className=\"col l12 s12 m12 panel-header\">\n            <h5>Пользователи</h5>\n            <Modal\n                header='Добавить пользователя'\n                trigger={<Button text=\"Добавить пользователя\"/>} actions={''}>\n                <AddUserForm onSubmit={this.props.onSubmit}/>\n            </Modal>\n        </div>\n        {!this.props.data.length && (<div className=\"no-users\">Нет пользователей</div>) || (\n            <ul className=\"collection\">\n                {this.props.data.map(user => (\n                    <li className=\"collection-item\">{user.name}</li>\n                ))}\n            </ul>\n        )}\n    </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Row, Input } from 'react-materialize';\nimport { Button } from '../Button/Button';\n\nimport './AddNewsForm.css';\n\nexport class AddNewsForm extends Component {\n    state = {\n        title: '',\n        description: '',\n        imageUrl: '',\n    }\n\n    render() {\n        return (\n            <Row>\n                <Input s={12} label=\"Тема\" onChange={(e) => this.updateData('title', e.target.value)}/>\n                <Input s={12} label=\"Описание\" onChange={(e) => this.updateData('description', e.target.value)}/>\n                <Input s={12} label=\"Сыылка на кртинку\" onChange={(e) => this.updateData('imageUrl', e.target.value)}/>\n                <Button text=\"Добавить\" className=\"right margin-right\" onClick={() => this.props.onSubmit(this.state)}/>\n            </Row>\n        );\n    }\n\n    updateData(field, value) {\n        this.setState({ [field]: value });\n    }\n}\n","import React, { Component } from 'react';\n\nimport { Button } from '../Button/Button';\nimport { AddNewsForm } from '../AddNewsForm/AddNewsForm';\nimport { Modal } from 'react-materialize';\n\nimport './News.css';\n\nexport class News extends Component {\n  render() {\n    return (\n        <div className=\"panel\">\n            <div className=\"row no-margin\">\n                <div className=\"col l12 s12 m12 panel-header\">\n                    <h5>Новости</h5>\n                    <Modal\n                        header='Добавить новость'\n                        trigger={<Button text=\"Добавить новость\"/>} actions={''}>\n                        <AddNewsForm onSubmit={this.props.onSubmit}/>\n                    </Modal>\n                </div>\n            </div>\n            <div className=\"row\">\n            {!this.props.data.length && (<div className=\"no-news\">Нет новостей</div>) || this.props.data.map(item => (\n                <div className=\"col s12 m6 l4\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title\">{item.title}</span>\n                            <p>{item.description}</p>\n                        </div>\n                    </div>\n                </div>\n            ))}\n            </div>\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport './Footer.css';\n\nexport class Footer extends Component {\n  render() {\n    return (\n        <footer className=\"page-footer\">\n            <div className=\"footer-copyright\">\n                <div className=\"container\">© 2018 AzumiarStudios</div>\n            </div>\n        </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Header } from './blocks/Header/Header';\nimport { Users } from './blocks/Users/Users';\nimport { News } from './blocks/News/News';\nimport { Footer } from './blocks/Footer/Footer';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    users: [],\n    news: [],\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div className=\"container\">\n          <Users onSubmit={this.onUserSubmit} data={this.state.users}/>\n          <News onSubmit={this.onNewsSubmit} data={this.state.news}/>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch('/api/users')\n      .then(data => data.json())\n      .then(data => {\n        this.setState({ users: data });\n      }).catch(e => {});\n\n    fetch('/api/news')\n      .then(data => data.json())\n      .then(data => {\n        this.setState({ news: data });\n      }).catch(e => {});\n  }\n\n  onUserSubmit(data) {\n    fetch(\"http://localhost:3000/api/users\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n\n  onNewsSubmit(data) {\n    fetch(\"http://localhost:3000/api/news\",{\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}